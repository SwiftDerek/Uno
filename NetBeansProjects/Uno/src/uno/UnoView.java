/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uno;

import java.awt.Dimension;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Derek
 */
public class UnoView extends javax.swing.JFrame {

    public UnoController controller;
    public JLabel[] labelArray = new JLabel[26];
    public UnoCard[] currentHand = new UnoCard[26];
    /**
     * Creates new form UnoView
     */
    public UnoView() {
        initComponents();
        setLabelArray();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        start = new javax.swing.JButton();
        help = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        player1Label = new javax.swing.JLabel();
        player2Label = new javax.swing.JLabel();
        player3Label = new javax.swing.JLabel();
        player4Label = new javax.swing.JLabel();
        unoButton = new javax.swing.JButton();
        currentPlayerLabel = new javax.swing.JLabel();
        endTurnButton = new javax.swing.JButton();
        drawButton = new javax.swing.JButton();
        currentPlayerHand = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        deckPile = new javax.swing.JPanel();
        discardPile = new javax.swing.JPanel();
        topOfDiscardPile = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        help.setText("Help");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        unoButton.setText("UNO!");
        unoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoButtonActionPerformed(evt);
            }
        });

        endTurnButton.setText("End Turn");
        endTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTurnButtonActionPerformed(evt);
            }
        });

        drawButton.setText("Draw");
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout currentPlayerHandLayout = new javax.swing.GroupLayout(currentPlayerHand);
        currentPlayerHand.setLayout(currentPlayerHandLayout);
        currentPlayerHandLayout.setHorizontalGroup(
            currentPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentPlayerHandLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(currentPlayerHandLayout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        currentPlayerHandLayout.setVerticalGroup(
            currentPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentPlayerHandLayout.createSequentialGroup()
                .addGroup(currentPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(currentPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12)
                        .addComponent(jLabel13)
                        .addComponent(jLabel4))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(currentPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addContainerGap())
        );

        javax.swing.GroupLayout deckPileLayout = new javax.swing.GroupLayout(deckPile);
        deckPile.setLayout(deckPileLayout);
        deckPileLayout.setHorizontalGroup(
            deckPileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 158, Short.MAX_VALUE)
        );
        deckPileLayout.setVerticalGroup(
            deckPileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );

        topOfDiscardPile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uno/images/Blue0.JPG"))); // NOI18N

        javax.swing.GroupLayout discardPileLayout = new javax.swing.GroupLayout(discardPile);
        discardPile.setLayout(discardPileLayout);
        discardPileLayout.setHorizontalGroup(
            discardPileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
            .addGroup(discardPileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(discardPileLayout.createSequentialGroup()
                    .addGap(58, 58, 58)
                    .addComponent(topOfDiscardPile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(59, Short.MAX_VALUE)))
        );
        discardPileLayout.setVerticalGroup(
            discardPileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
            .addGroup(discardPileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(discardPileLayout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(topOfDiscardPile)
                    .addContainerGap(51, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(endTurnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(drawButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deckPile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(discardPile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(unoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(player2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player4Label, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(currentPlayerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(397, 397, 397))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(currentPlayerHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(player1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(player4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(unoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 24, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(endTurnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(drawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))
                            .addComponent(discardPile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deckPile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)))
                .addComponent(currentPlayerHand, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(currentPlayerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(321, 321, 321)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        Integer[] options = {2,3,4};
        int numPlayers = JOptionPane.showOptionDialog(this,
            "How many players?",
            "Uno Card Game",
            JOptionPane.YES_NO_CANCEL_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);

        switch (numPlayers) {
            case 0:
            numPlayers = 2;
            break;
            case 1:
            numPlayers = 3;
            break;
            default:
            numPlayers = 4;
            break;
        }
        start.setText("Restart");
        controller.setNumPlayers(numPlayers);
    }//GEN-LAST:event_startActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        JOptionPane.showMessageDialog(null, "To Start game press the Start Button.\n"
                + "To Restart game press the Restart Button after Start has been pressed.\n"
                + "\n"
                + "The objective of UNO is to hold only one card and declare UNO to win the game.\n"
                + "-Players can only discard one card per turn and the discarded card has to match the color or number of the top card in the discard pile.\n"
                + "-There are special cards that change the flow of the game: \n"
                + "-Reverse changes direction of the players\n"
                + "-Skip skips the next player\n"
                + "-Draw 2 causes the next player to draw 2 and skips their turn\n"
                + "-The Wild cards allow the player to pick a color and the Wild Draw 4 also causes the next player to draw 4 and skip their turn.", "Uno Help", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpActionPerformed

    private void unoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unoButtonActionPerformed
           if (controller.checkUNO()){
               JOptionPane.showMessageDialog(null, "You have won the game! Congratulations!", "You win!", JOptionPane.INFORMATION_MESSAGE);
               hidePanel();
           } else {
               JOptionPane.showMessageDialog(null, "You do not have UNO", "Sorry", JOptionPane.ERROR_MESSAGE);
           }
    }//GEN-LAST:event_unoButtonActionPerformed

    private void endTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTurnButtonActionPerformed
        controller.endTurn();
    }//GEN-LAST:event_endTurnButtonActionPerformed

    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed
        controller.draw();
    }//GEN-LAST:event_drawButtonActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        setDiscardPile(getImage(currentHand[0]));
        controller.discardCard(currentHand[0]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        setDiscardPile(getImage(currentHand[1]));
        controller.discardCard(currentHand[1]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        setDiscardPile(getImage(currentHand[2]));
        controller.discardCard(currentHand[2]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        setDiscardPile(getImage(currentHand[3]));
        controller.discardCard(currentHand[3]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        setDiscardPile(getImage(currentHand[4]));
        controller.discardCard(currentHand[4]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        setDiscardPile(getImage(currentHand[5]));
        controller.discardCard(currentHand[5]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        setDiscardPile(getImage(currentHand[6]));
        controller.discardCard(currentHand[6]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        setDiscardPile(getImage(currentHand[7]));
        controller.discardCard(currentHand[7]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        setDiscardPile(getImage(currentHand[8]));
        controller.discardCard(currentHand[8]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        setDiscardPile(getImage(currentHand[9]));
        controller.discardCard(currentHand[9]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        setDiscardPile(getImage(currentHand[10]));
        controller.discardCard(currentHand[10]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        setDiscardPile(getImage(currentHand[11]));
        controller.discardCard(currentHand[11]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        setDiscardPile(getImage(currentHand[12]));
        controller.discardCard(currentHand[12]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        setDiscardPile(getImage(currentHand[13]));
        controller.discardCard(currentHand[13]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        setDiscardPile(getImage(currentHand[14]));
        controller.discardCard(currentHand[14]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        setDiscardPile(getImage(currentHand[15]));
        controller.discardCard(currentHand[15]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        setDiscardPile(getImage(currentHand[16]));
        controller.discardCard(currentHand[16]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        controller.discardCard(currentHand[17]);
        setDiscardPile(getImage(currentHand[17]));
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        setDiscardPile(getImage(currentHand[18]));
        controller.discardCard(currentHand[18]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        setDiscardPile(getImage(currentHand[19]));
        controller.discardCard(currentHand[19]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        controller.discardCard(currentHand[20]);
        setDiscardPile(getImage(currentHand[20]));
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        setDiscardPile(getImage(currentHand[21]));
        controller.discardCard(currentHand[21]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        setDiscardPile(getImage(currentHand[22]));
        controller.discardCard(currentHand[22]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        setDiscardPile(getImage(currentHand[23]));
        controller.discardCard(currentHand[23]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        setDiscardPile(getImage(currentHand[24]));
        controller.discardCard(currentHand[24]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        setDiscardPile(getImage(currentHand[25]));
        controller.discardCard(currentHand[25]);
        if (controller.invalidPlay()){
            setDiscardPile(getImage(controller.getTopOfDeck()));
        }
    }//GEN-LAST:event_jLabel26MouseClicked
    
    public void setPlayers1Label(int handSize){
        player1Label.setText("Player " + 1 + ":  " + handSize + " cards");
    }
    
    public void setPlayers2Label(int handSize){
        player2Label.setText("Player " + 2 + ":  " + handSize + " cards");
    }
    
    public void setPlayers3Label(int handSize){
        player3Label.setText("Player " + 3 + ":  " + handSize + " cards");
    }
    
    public void setPlayers4Label(int handSize){
        player4Label.setText("Player " + 4 + ":  " + handSize + " cards");
    }
    
    public void clearPlayersLabel(){
        player3Label.setText("");
        player4Label.setText("");
    }
    
    public void setController(UnoController controller){
        this.controller = controller;
    }
    
    public void hidePanel(){
        this.jPanel1.setVisible(false);
    }
    
    public void showPanel(){
        this.jPanel1.setVisible(true);
    }
    
    public void hideDrawButton(){
        this.drawButton.setVisible(false);
        this.endTurnButton.setVisible(true);
    }
    
    public void showDrawButton(){
        this.drawButton.setVisible(true);
        this.endTurnButton.setVisible(false);
    }
    
    public void setCurrentPlayerLabel(int currentPlayer){
        currentPlayerLabel.setText("Player " + (currentPlayer + 1));
    }
    
    public void displayHandCards(){
        controller.displayHandCards();
    }
    
    public void clearDiscardPile(){
        topOfDiscardPile.setVisible(false);
    }
    
    public ImageIcon getImage(UnoCard card){
        
        ImageIcon image;
        String location = "";
        
        if(card instanceof UnoNumber){
            if("blue".equals(card.getColor())){
                switch (((UnoNumber) card).getNumber()) {
                    case 0:
                        location = "images/Blue0.JPG";
                        break;
                    case 1:
                        location = "images/Blue1.JPG";
                        break;
                    case 2:
                        location = "images/Blue2.JPG";
                        break;
                    case 3:
                        location = "images/Blue3.JPG";
                        break;
                    case 4:
                        location = "images/Blue4.JPG";
                        break;
                    case 5:
                        location = "images/Blue5.JPG";
                        break;
                    case 6:
                        location = "images/Blue6.JPG";
                        break;
                    case 7:
                        location = "images/Blue7.JPG";
                        break;
                    case 8:
                        location = "images/Blue8.JPG";
                        break;
                    default:
                        location = "images/Blue9.JPG";
                        break;
                }
            } else if ("green".equals(card.getColor())){
                switch (((UnoNumber) card).getNumber()) {
                    case 0:
                        location = "images/Green0.JPG";
                        break;
                    case 1:
                        location = "images/Green1.JPG";
                        break;
                    case 2:
                        location = "images/Green2.JPG";
                        break;
                    case 3:
                        location = "images/Green3.JPG";
                        break;
                    case 4:
                        location = "images/Green4.JPG";
                        break;
                    case 5:
                        location = "images/Green5.JPG";
                        break;
                    case 6:
                        location = "images/Green6.JPG";
                        break;
                    case 7:
                        location = "images/Green7.JPG";
                        break;
                    case 8:
                        location = "images/Green8.JPG";
                        break;
                    default:
                        location = "images/Green9.JPG";
                        break;
                }
            } else if ("red".equals(card.getColor())){
                switch (((UnoNumber) card).getNumber()) {
                    case 0:
                        location = "images/Red0.png";
                        break;
                    case 1:
                        location = "images/Red1.JPG";
                        break;
                    case 2:
                        location = "images/Red2.JPG";
                        break;
                    case 3:
                        location = "images/Red3.JPG";
                        break;
                    case 4:
                        location = "images/Red4.JPG";
                        break;
                    case 5:
                        location = "images/Red5.JPG";
                        break;
                    case 6:
                        location = "images/Red6.JPG";
                        break;
                    case 7:
                        location = "images/Red7.JPG";
                        break;
                    case 8:
                        location = "images/Red8.JPG";
                        break;
                    default:
                        location = "images/Red9.JPG";
                        break;
                }
            } else if ("yellow".equals(card.getColor())){
                switch (((UnoNumber) card).getNumber()) {
                    case 0:
                        location = "images/Yellow0.JPG";
                        break;
                    case 1:
                        location = "images/Yellow1.JPG";
                        break;
                    case 2:
                        location = "images/Yellow2.JPG";
                        break;
                    case 3:
                        location = "images/Yellow3.JPG";
                        break;
                    case 4:
                        location = "images/Yellow4.JPG";
                        break;
                    case 5:
                        location = "images/Yellow5.JPG";
                        break;
                    case 6:
                        location = "images/Yellow6.JPG";
                        break;
                    case 7:
                        location = "images/Yellow7.JPG";
                        break;
                    case 8:
                        location = "images/Yellow8.JPG";
                        break;
                    default:
                        location = "images/Yellow9.JPG";
                        break;
                }
            }
        } else if (card instanceof UnoWild){
            location = "images/Wild.JPG";
        } else if (card instanceof UnoWildDraw){
            location = "images/WildDraw4.JPG";
        } else if (card instanceof UnoSkip){
            if("blue".equals(card.getColor())){
                location = "images/BlueSkip.JPG";
            } else if ("green".equals(card.getColor())){
                location = "images/GreenSkip.JPG";
            } else if ("red".equals(card.getColor())){
                location = "images/RedSkip.JPG";
            } else {
                location = "images/YellowSkip.JPG";
            }
        } else if (card instanceof UnoReverse){
            if("blue".equals(card.getColor())){
                location = "images/BlueReverse.JPG";
            } else if ("green".equals(card.getColor())){
                location = "images/GreenReverse.JPG";
            } else if ("red".equals(card.getColor())){
                location = "images/RedReverse.JPG";
            } else {
                location = "images/YellowReverse.JPG";
            }
        } else {
            if("blue".equals(card.getColor())){
                location = "images/BlueDraw2.JPG";
            } else if ("green".equals(card.getColor())){
                location = "images/GreenDraw2.JPG";
            } else if ("red".equals(card.getColor())){
                location = "images/RedDraw2.JPG";
            } else {
                location = "images/YellowDraw2.JPG";
            }
        }
        image = new javax.swing.ImageIcon(getClass().getResource("/uno/" + location));
        return image;
    }
    
    public void setDiscardPile(ImageIcon Image){
        topOfDiscardPile.setIcon(Image);
    }
    
    public String chooseColor(){
        String color = "";
        
        String[] colors = {"red", "yellow", "blue", "green"};
        int colorOptions = JOptionPane.showOptionDialog(this,
            "Choose a color",
            "Wild Card",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            colors,
            colors[0]);

        switch (colorOptions) {
            case 0:
            color = "red";
            break;
            case 1:
            color = "yellow";
            break;
            case 2:
            color = "blue";
            break;
            default:
            color = "green";
            break;
        }
        
        return color;
    }
    
    public void setLabelArray(){
        labelArray[0] = jLabel1;
        labelArray[1] = jLabel2;
        labelArray[2] = jLabel3;
        labelArray[3] = jLabel4;
        labelArray[4] = jLabel5;
        labelArray[5] = jLabel6;
        labelArray[6] = jLabel7;
        labelArray[7] = jLabel8;
        labelArray[8] = jLabel9;
        labelArray[9] = jLabel10;
        labelArray[10] = jLabel11;
        labelArray[11] = jLabel12;
        labelArray[12] = jLabel13;
        labelArray[13] = jLabel14;
        labelArray[14] = jLabel15;
        labelArray[15] = jLabel16;
        labelArray[16] = jLabel17;
        labelArray[17] = jLabel18;
        labelArray[18] = jLabel19;
        labelArray[19] = jLabel20;
        labelArray[20] = jLabel21;
        labelArray[21] = jLabel22;
        labelArray[22] = jLabel23;
        labelArray[23] = jLabel24;
        labelArray[24] = jLabel25;
        labelArray[25] = jLabel26;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel currentPlayerHand;
    private javax.swing.JLabel currentPlayerLabel;
    private javax.swing.JPanel deckPile;
    private javax.swing.JPanel discardPile;
    private javax.swing.JButton drawButton;
    private javax.swing.JButton endTurnButton;
    private javax.swing.JButton help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel player1Label;
    private javax.swing.JLabel player2Label;
    private javax.swing.JLabel player3Label;
    private javax.swing.JLabel player4Label;
    private javax.swing.JButton start;
    private javax.swing.JLabel topOfDiscardPile;
    private javax.swing.JButton unoButton;
    // End of variables declaration//GEN-END:variables
}
